# Platform Admin: Cluster-wide infrastructure management
# WHY: Platform team needs access to cluster resources (nodes, namespaces, storage)
# PATTERN: ClusterRole + ClusterRoleBinding = Full cluster scope

---
# ClusterRole: Platform infrastructure permissions
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: platform-admin
rules:
# Namespace management
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# Node management
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "watch", "update", "patch"]

# Node metrics and status
- apiGroups: [""]
  resources: ["nodes/status", "nodes/metrics"]
  verbs: ["get", "list", "watch"]

# Storage management
- apiGroups: [""]
  resources: ["persistentvolumes"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

- apiGroups: ["storage.k8s.io"]
  resources: ["storageclasses", "volumeattachments"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# RBAC management (careful!)
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["clusterroles", "clusterrolebindings", "roles", "rolebindings"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# Custom Resource Definitions
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# Admission controllers and policies
- apiGroups: ["admissionregistration.k8s.io"]
  resources: ["validatingadmissionwebhooks", "mutatingadmissionwebhooks"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# Cluster networking
- apiGroups: ["networking.k8s.io"]
  resources: ["networkpolicies", "ingressclasses"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# Read access to all application resources (for troubleshooting)
- apiGroups: ["apps"]
  resources: ["*"]
  verbs: ["get", "list", "watch"]

- apiGroups: [""]
  resources: ["pods", "services", "configmaps", "secrets", "events"]
  verbs: ["get", "list", "watch"]

---
# ServiceAccount for platform automation
apiVersion: v1
kind: ServiceAccount
metadata:
  name: platform-admin-sa
  namespace: kube-system

---
# ClusterRoleBinding: Apply platform-admin role cluster-wide
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: platform-admin-binding
subjects:
# Platform team members
- kind: User
  name: platform-team@company.com
  apiGroup: rbac.authorization.k8s.io
# Automation service account
- kind: ServiceAccount
  name: platform-admin-sa
  namespace: kube-system
roleRef:
  kind: ClusterRole
  name: platform-admin
  apiGroup: rbac.authorization.k8s.io

---
# Test pod for platform permissions
apiVersion: v1
kind: Pod
metadata:
  name: platform-test
  namespace: kube-system
spec:
  serviceAccountName: platform-admin-sa
  containers:
  - name: kubectl
    image: bitnami/kubectl:latest
    command: ["sleep", "3600"]
    # Test commands:
    # kubectl auth can-i create namespaces (should work)
    # kubectl auth can-i list nodes (should work)
    # kubectl auth can-i create storageclasses (should work)
    # kubectl auth can-i create clusterroles (should work)
    # kubectl get all --all-namespaces (should work)