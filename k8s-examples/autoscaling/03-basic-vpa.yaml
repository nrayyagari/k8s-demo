# Basic VPA Example - Automatic resource recommendation and update
# VPA automatically adjusts CPU and memory requests/limits based on actual usage
# WHY: Right-sizes pods to avoid over/under-provisioning resources

apiVersion: apps/v1
kind: Deployment
metadata:
  name: resource-app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: resource-app
  template:
    metadata:
      labels:
        app: resource-app
    spec:
      containers:
      - name: resource-app
        image: nginx:1.21
        resources:
          requests:
            cpu: 100m      # VPA will adjust these based on actual usage
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
        ports:
        - containerPort: 80

---
# Basic VPA Configuration
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: resource-app-vpa
spec:
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: resource-app
  
  updatePolicy:
    updateMode: "Auto"        # Options: "Off", "Initial", "Recreation", "Auto"
    # "Off" - Only provides recommendations, no updates
    # "Initial" - Sets requests only for new pods
    # "Recreation" - Restarts pods with new requests (use with caution)
    # "Auto" - Automatically updates requests (restarts pods)
  
  resourcePolicy:
    containerPolicies:
    - containerName: resource-app
      minAllowed:
        cpu: 50m
        memory: 64Mi
      maxAllowed:
        cpu: 2000m
        memory: 2Gi
      controlledResources: ["cpu", "memory"]
      controlledValues: RequestsAndLimits  # Options: RequestsAndLimits, RequestsOnly